// <auto-generated />
using System;
using EBuy.DAL.Models.EF_Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EBuy.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220930054655_ic")]
    partial class ic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Brand1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Brand2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 1,
                            TotalPrice = 5.0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 2,
                            TotalPrice = 10.0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 3,
                            TotalPrice = 15.0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 4,
                            TotalPrice = 20.0
                        },
                        new
                        {
                            Id = 5,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 5,
                            TotalPrice = 25.0
                        },
                        new
                        {
                            Id = 6,
                            Amount = 5,
                            CustomerId = 1,
                            ProductId = 6,
                            TotalPrice = 30.0
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("DetailText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            DetailText = "Product1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand1-product1.jpg",
                            Price = 1.0,
                            ProductName = "Product1",
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            DetailText = "Product2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand1-product2.jpg",
                            Price = 2.0,
                            ProductName = "Product2",
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            DetailText = "Product3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand1-product3.jpg",
                            Price = 3.0,
                            ProductName = "Product3",
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            DetailText = "Product4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand2-product4.jpg",
                            Price = 4.0,
                            ProductName = "Product4",
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            DetailText = "Product5 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand2-product5.jpg",
                            Price = 5.0,
                            ProductName = "Product5",
                            Stock = 50
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            DetailText = "Product6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent commodo convallis condimentum. Suspendisse potenti. Vestibulum facilisis risus vitae turpis tempus, ut commodo turpis iaculis. Pellentesque eleifend neque id malesuada ultricies. Duis egestas velit sit amet arcu interdum, vel luctus risus commodo. Aenean a purus vitae libero mollis laoreet. Nulla pretium arcu ut est venenatis feugiat. Proin eget dolor at libero luctus consequat eu et lectus. Aenean vitae justo in lectus congue hendrerit.",
                            ImageName = "brand2-product6.jpg",
                            Price = 6.0,
                            ProductName = "Product6",
                            Stock = 60
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Satıcı"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Alıcı"
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            CustomerId = 1,
                            Date = new DateTime(2022, 8, 15, 14, 39, 47, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            TotalPrice = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2,
                            CustomerId = 1,
                            Date = new DateTime(2022, 7, 7, 8, 42, 21, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            TotalPrice = 4.0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 3,
                            CustomerId = 1,
                            Date = new DateTime(2022, 6, 5, 17, 53, 53, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            TotalPrice = 9.0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 4,
                            CustomerId = 2,
                            Date = new DateTime(2022, 5, 18, 23, 36, 6, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            TotalPrice = 16.0
                        },
                        new
                        {
                            Id = 5,
                            Amount = 5,
                            CustomerId = 2,
                            Date = new DateTime(2022, 4, 22, 13, 15, 32, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            TotalPrice = 25.0
                        },
                        new
                        {
                            Id = 6,
                            Amount = 6,
                            CustomerId = 2,
                            Date = new DateTime(2022, 3, 10, 11, 22, 14, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            TotalPrice = 36.0
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "enesograg@gmail.com",
                            FirstName = "Ahmet Enes",
                            LastName = "Ograğ",
                            Password = "aeo1234",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "kaankerimtas@gmail.com",
                            FirstName = "Kaan Kerim",
                            LastName = "Taş",
                            Password = "kkt1234",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "johndoe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "jd1234",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "alicesmith@gmail.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "as1234",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Brand", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.User", "User")
                        .WithOne("Brand")
                        .HasForeignKey("EBuy.DAL.Models.EF_Models.Brand", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.CartItem", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.Customer", "Customer")
                        .WithMany("CartItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBuy.DAL.Models.EF_Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Customer", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("EBuy.DAL.Models.EF_Models.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Product", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Sale", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EBuy.DAL.Models.EF_Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.User", b =>
                {
                    b.HasOne("EBuy.DAL.Models.EF_Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Customer", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EBuy.DAL.Models.EF_Models.User", b =>
                {
                    b.Navigation("Brand");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
